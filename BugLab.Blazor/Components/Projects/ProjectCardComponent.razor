@inject IDialogService Dialog
@inject HttpClient Client

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6" Color="Color.Primary">@Project.Title</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText>@Project.Description</MudText>
        <MudText Typo="Typo.body2">Total high prioritized bugs: @Project.TotalHighPriorityBugs</MudText>
        <MudText Typo="Typo.body2">Total bugs: @Project.TotalBugs</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudIconButton Icon="@Icons.Filled.DeleteForever" OnClick="ConfirmDelete" Color="Color.Error" />
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public ProjectResponse Project { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }

    private async Task ConfirmDelete()
    {
        var result = await Dialog.ShowMessageBox($"Are you sure you want to delete {Project.Title}", "This cannot be undone", "OK", "Cancel");
        if (!result.HasValue || !result.Value) return;

        var response = await Client.DeleteAsync($"{Endpoints.Projects}/{Project.Id}");
        await OnDelete.InvokeAsync();
    }
}
